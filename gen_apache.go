// Copyright(C) 2023 github.com/fsgo  All Rights Reserved.
// Author: hidu <duv123@gmail.com>
// Date: 2023/7/28

//go:build ignore

package main

import (
	"bytes"
	"fmt"
	"go/format"
	"io"
	"log"
	"net/http"
	"strings"
)

const apacheURL = "https://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types"

func main() {
	resp, err := http.Get(apacheURL)
	if err != nil {
		log.Fatalln(err)
	}
	defer resp.Body.Close()
	content, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Fatalln(err)
	}
	lines := strings.Split(string(content), "\n")
	bf := &bytes.Buffer{}

	index := map[string]bool{}

	bf.WriteString("// Code generated by gen_apache.go. DO NOT EDIT.\n")
	bf.WriteString("// source: " + apacheURL + "\n")
	bf.WriteString("\npackage fsmime\n")
	bf.WriteString("var apache=map[string]string{\n")
	for _, line := range lines {
		line = strings.TrimSpace(line)
		if line == "" || strings.HasPrefix(line, "#") {
			continue
		}
		arr := strings.Fields(line)
		for i := 1; i < len(arr); i++ {
			tp := arr[i]
			if index[tp] {
				continue
			}
			index[tp] = true
			bf.WriteString(fmt.Sprintf("%q:%q,\n", "."+tp, arr[0]))
		}
	}
	bf.WriteString("}\n")
	code, err := format.Source(bf.Bytes())
	if err != nil {
		log.Fatalln(err)
	}
	fmt.Print(string(code))
}
